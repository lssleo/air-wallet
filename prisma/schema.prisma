generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model balance {
  id        Int      @id(map: "PK_079dddd31a81672e8143a649ca0") @default(autoincrement())
  currency  String   @db.VarChar
  amount    String   @db.VarChar
  walletId  Int?
  networkId Int?
  network   network? @relation(fields: [networkId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0c1dc7f402fc8c820fd22b19599")
  wallet    wallet?  @relation(fields: [walletId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_5acde38cb734c647fe617df08ef")
}

model network {
  id             Int           @id(map: "PK_8f8264c2d37cbbd8282ee9a3c97") @default(autoincrement())
  name           String        @db.VarChar
  nativeCurrency String        @db.VarChar
  balance        balance[]
  transaction    transaction[]
}

model session {
  id        Int       @id(map: "PK_f55da76ac1c3ac420f444d2ff11") @default(autoincrement())
  ip        String    @db.VarChar
  userAgent String    @db.VarChar
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime? @db.Timestamp(6)
  expiresAt DateTime  @db.Timestamp(6)
  userId    Int?
  user      user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3d2f174ef04fb312fdebd0ddc53")
}

model token {
  id       Int    @id(map: "PK_82fae97f905930df5d62a702fc9") @default(autoincrement())
  name     String @db.VarChar
  symbol   String @db.VarChar
  decimals Int
  address  String @db.VarChar
  network  String @db.VarChar
}

model transaction {
  id        Int      @id(map: "PK_89eadb93a89810556e1cbcd6ab9") @default(autoincrement())
  hash      String   @db.VarChar
  from      String   @db.VarChar
  to        String   @db.VarChar
  value     String   @db.VarChar
  gasUsed   String   @db.VarChar
  gasPrice  String   @db.VarChar
  fee       String   @db.VarChar
  networkId Int?
  walletId  Int?
  network   network? @relation(fields: [networkId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_72fe103c280a08073ede6b3a01d")
  wallet    wallet?  @relation(fields: [walletId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_900eb6b5efaecf57343e4c0e79d")
}

model user {
  id               Int       @id(map: "PK_cace4a159ff9f2512dd42373760") @default(autoincrement())
  email            String    @db.VarChar @unique
  password         String    @db.VarChar
  isVerified       Boolean   @default(false)
  verificationCode String?   @db.VarChar
  session          session[]
  wallet           wallet[]
}

model wallet {
  id                  Int           @id(map: "PK_bec464dd8d54c39c54fd32e2334") @default(autoincrement())
  address             String        @db.VarChar @unique
  encryptedPrivateKey String        @db.VarChar
  userId              Int?
  balance             balance[]
  transaction         transaction[]
  user                user?         @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_35472b1fe48b6330cd349709564")
}

